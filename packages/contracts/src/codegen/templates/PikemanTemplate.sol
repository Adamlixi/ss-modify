// SPDX-License-Identifier: MIT
pragma solidity >=0.8.21;

/* Autogenerated file. Do not edit manually. */

import { PackedCounter } from "@latticexyz/store/src/PackedCounter.sol";
import { ResourceId } from "@latticexyz/store/src/ResourceId.sol";
import { createTemplate } from "../../libraries/templates/createTemplate.sol";
import { UnitTypes, TerrainTypes, StructureTypes, ItemTypes } from "../common.sol";

import { Combat, CombatTableId, StaminaOnKill, StaminaOnKillTableId, Movable, MovableTableId, Tier, TierTableId, UnitType, UnitTypeTableId, Range, RangeTableId } from "../index.sol";

bytes32 constant templateId = "Pikeman";
bytes32 constant PikemanTemplateId = templateId;
uint256 constant LENGTH = 6;

function PikemanTemplate() {
  bytes32[] memory tableIds = new bytes32[](LENGTH);
  bytes32[] memory encodedLengthss = new bytes32[](LENGTH);
  bytes[] memory staticDatas = new bytes[](LENGTH);
  bytes[] memory dynamicDatas = new bytes[](LENGTH);

  bytes memory staticData;
  PackedCounter encodedLengths;
  bytes memory dynamicData;

  tableIds[0] = ResourceId.unwrap(CombatTableId);
  tableIds[1] = ResourceId.unwrap(StaminaOnKillTableId);
  tableIds[2] = ResourceId.unwrap(MovableTableId);
  tableIds[3] = ResourceId.unwrap(TierTableId);
  tableIds[4] = ResourceId.unwrap(UnitTypeTableId);
  tableIds[5] = ResourceId.unwrap(RangeTableId);

  (staticData, encodedLengths, dynamicData) = Combat.encode(500000, 500000, 20000, 100000, 50000, 70);
  staticDatas[0] = staticData;
  encodedLengthss[0] = PackedCounter.unwrap(encodedLengths);
  dynamicDatas[0] = dynamicData;

  (staticData, encodedLengths, dynamicData) = StaminaOnKill.encode(2500);
  staticDatas[1] = staticData;
  encodedLengthss[1] = PackedCounter.unwrap(encodedLengths);
  dynamicDatas[1] = dynamicData;

  (staticData, encodedLengths, dynamicData) = Movable.encode(3000);
  staticDatas[2] = staticData;
  encodedLengthss[2] = PackedCounter.unwrap(encodedLengths);
  dynamicDatas[2] = dynamicData;

  (staticData, encodedLengths, dynamicData) = Tier.encode(3);
  staticDatas[3] = staticData;
  encodedLengthss[3] = PackedCounter.unwrap(encodedLengths);
  dynamicDatas[3] = dynamicData;

  (staticData, encodedLengths, dynamicData) = UnitType.encode(UnitTypes(uint8(1)));
  staticDatas[4] = staticData;
  encodedLengthss[4] = PackedCounter.unwrap(encodedLengths);
  dynamicDatas[4] = dynamicData;

  (staticData, encodedLengths, dynamicData) = Range.encode(0, 1);
  staticDatas[5] = staticData;
  encodedLengthss[5] = PackedCounter.unwrap(encodedLengths);
  dynamicDatas[5] = dynamicData;

  createTemplate(templateId, tableIds, staticDatas, encodedLengthss, dynamicDatas);
}
